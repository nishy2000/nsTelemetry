<?xml version="1.0"?>
<doc>
    <assembly>
        <name>nsTelemetryAI</name>
    </assembly>
    <members>
        <member name="T:NishySoftware.Telemetry.ApplicationInsights.DeveloperModeWithDebuggerAttachedTelemetryModule">
            <summary>
            [en] Telemetry module that sets developer mode to true when is not already set AND managed debugger is attached.
            <br/>
            [ja] デベロッパーモードが設定されていなくて、デバッガーがアタッチされているときに、デベロッパーモードをセットするTelemetryモジュール
            </summary>
        </member>
        <member name="T:NishySoftware.Telemetry.ApplicationInsights.Telemetry">
            <summary>
            [en] A class that exposes an API to create an instance of the <see cref="T:NishySoftware.Telemetry.ITelemetry"/> interface.
            <br/>
            [ja] <see cref="T:NishySoftware.Telemetry.ITelemetry"/> インターフェースのインスタンスを作成するAPIを公開するクラス
            </summary>
        </member>
        <member name="M:NishySoftware.Telemetry.ApplicationInsights.Telemetry.CreateTelemetry">
            <summary>
            [en] Static function to create the <see cref="T:NishySoftware.Telemetry.ITelemetry"/> interface
            <br/>
            [ja] <see cref="T:NishySoftware.Telemetry.ITelemetry"/> インターフェースを作成する静的関数
            </summary>
            <returns>
            [en] <see cref="T:NishySoftware.Telemetry.ITelemetry"/> interface
            <br/>
            [ja] <see creaf="T:NishySoftware.Telemetry.ITelemetry"/> インターフェース
            </returns>
        </member>
        <member name="P:NishySoftware.Telemetry.ApplicationInsights.Telemetry.CommonDataKinds">
            <summary>
            [en] Property that specifies the common telemetry data to be applied to all telemetry transmissions.
            <br/>
            [ja] すべてのテレメトリー送信に適用する共通Telemetryデータを指定するプロパティ
            </summary>
        </member>
        <member name="M:NishySoftware.Telemetry.ApplicationInsights.Telemetry.EnableDeveloperMode(System.Boolean)">
            <summary>
            [en] Set and reset DeveloperMode.
            <br/>
            [ja] DeveloperModeを設定・解除する
            </summary>
            <param name="enable">[en] new value. <br/> [ja]新しい値。</param>
            <returns>
            [en] old value.
            <br/>
            [ja]変更前の値。
            </returns>
            <remarks>
            [en] This library is automatically set to DeveloperMode mode when the Debugger is attached.
            When DeveloperMode is enabled, synchronous transmission is always performed when the <see cref="T:NishySoftware.Telemetry.ITelemetry"/>.TrackXXXX() function is called.
            Synchronous sending slows down the application because there is a wait until the sending is completed when the <see cref="T:NishySoftware.Telemetry.ITelemetry"/>.TrackXXXX() function is called.
            To prevent the app from running slowly during debugging, disable DeveloperMode.
            <br/>
            [ja] このライブラリーはDebuggerがアッタッチされていたら、自動的にDeveloperModeモードに設定します。
            DeveloperModeが有効な場合は、<see cref="T:NishySoftware.Telemetry.ITelemetry"/>.TrackXXXX()関数を呼び出したときに常に同期送信が行われます。
            同期送信では、<see cref="T:NishySoftware.Telemetry.ITelemetry"/>.TrackXXXX()関数を呼び出したときに送信完了するまでの待ちが発生するため、アプリの動作が遅くなります。
            デバッグ時にアプリの動作が遅くならないようにするためには、DeveloperModeを解除します。
            </remarks>
        </member>
        <member name="M:NishySoftware.Telemetry.ApplicationInsights.Telemetry.IsEnabled">
            <summary>
            [en] Static function to check if Telemetry is enabled
            If disabled, calling the <see cref="T:NishySoftware.Telemetry.ITelemetry"/>.TrackXXXX() function will not send telemetry.
            <br/>
            [ja] Telemetryが有効化されているか確認する静的関数
            無効化されている場合は、<see cref="T:NishySoftware.Telemetry.ITelemetry"/>.TrackXXXX()関数を呼び出しても、テレメトリー送信されません
            </summary>
            <returns>
            [en] current value
            <br/>
            [ja] 現在の値
            </returns>
        </member>
        <member name="M:NishySoftware.Telemetry.ApplicationInsights.Telemetry.Enable(System.Boolean)">
            <summary>
            [en] Static function to enable/disable Telemetry
            If disabled, calling the <see cref="T:NishySoftware.Telemetry.ITelemetry"/>.TrackXXXX() function will not send telemetry.
            <br/>
            [ja] Telemetryを有効化・無効化する静的関数
            無効化されている場合は、<see cref="T:NishySoftware.Telemetry.ITelemetry"/>.TrackXXXX()関数を呼び出しても、テレメトリー送信されません
            </summary>
            <param name="enable">[en] new value. <br/> [ja]新しい値。</param>
            <returns>
            [en] old value
            <br/>
            [ja] 変更前の値
            </returns>
        </member>
        <member name="M:NishySoftware.Telemetry.ApplicationInsights.Telemetry.SetInstrumentationKey(System.String)">
            <summary>
            [en] Setup the InstrumentationKey.
            Setup your InstrumentationKey using this method if you do not place it in the ApplicationInsights.config file.
            <br/>
            [ja] InstrumentationKeyを設定します。
            ApplicationInsights.configファイルにInstrumentationKeyを設定していない場合は、このメソッドでInstrumentationKeyを設定します。
            </summary>
            <param name="instrumentationKey">[en] InstrumentationKey of Application Insights resource <br/> [ja] Application InsightsリソースのInstrumentationKey</param>
        </member>
        <member name="T:NishySoftware.Telemetry.ApplicationInsights.UnhandledExceptionTelemetryModule">
            <summary>
            The module subscribed to AppDomain.CurrentDomain.UnhandledException to send exceptions to ApplicationInsights.
            <br/>
            [ja] ApplicationInsightsに例外の発生を送信するために、AppDomain.CurrentDomain.UnhandledExceptionイベントを購読するためのTelemetryモジュール
            </summary>
        </member>
        <member name="T:NishySoftware.Telemetry.ApplicationInsights.UnobservedExceptionTelemetryModule">
            <summary>
            The module subscribed to TaskScheduler.UnobservedTaskException to send exceptions to ApplicationInsights.
            <br/>
            [ja] ApplicationInsightsに例外の発生を送信するために、TaskScheduler.UnobservedTaskExceptionイベントを購読するためのTelemetryモジュール
            </summary>
        </member>
    </members>
</doc>
